<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Executable input argument parsing and storage utilities</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="index_1md_README"/> This is a set of libraries to parse argument inputs and store the parsing value results into vararg variables. The intent of the library is to provide a quick and easy initialization input parsing utility so developers can focus on actual executable functionality.<linebreak/>
 </para>
<sect1 id="index_1autotoc_md1">
<title>libvarg</title>
<para>Is a library containing a set of variable argument value storage templates classes. The varg template classes implement interger, unsigned integer, floating point, text strings, boolean flags, incrementing and enumeration values. In addition listvarg templates implement a list version of the varg templates for storage of multiple array like value inputs. </para>
</sect1>
<sect1 id="index_1autotoc_md2">
<title>libcmd_line_parse</title>
<para>Is a library to parse the input command line for an executable. It uses vargs and listvargs classes to store the results of the command line parsing. The cmd_line_parse class uses an add argument interface similar to the Python randaleike/argparse class to define the association between the command line input and the varg/listvarg value storage location. </para>
</sect1>
<sect1 id="index_1autotoc_md3">
<title>libenvparse</title>
<para>Is a library to parse the input environment for an executable. It uses vargs and listvargs classes to store the results of the environment parsing. The envparse uses an add argument interface to define the association between the environment argument input and the varg/listvarg value storage location. </para>
</sect1>
<sect1 id="index_1autotoc_md4">
<title>libjson_arg_parser - Not implemented yet</title>
<para>Is a library to parse an input JSON file for an executable. It uses vargs and listvargs classes to store the results of the JSON parsing. The config_json_parse uses an add argument interface to define the association between the JSON argument input and the varg/listvarg value storage location. </para>
</sect1>
<sect1 id="index_1autotoc_md5">
<title>libxml_arg_parser - Not implemented yet</title>
<para>Is a library to parse an input XML file for an executable. It uses vargs and listvargs classes to store the results of the XML parsing. The config_xml_parse uses an add argument interface to define the association between the XML argument input and the varg/listvarg value storage location. </para>
</sect1>
<sect1 id="index_1autotoc_md6">
<title>libargparse</title>
<para>Single library containing libvarg, libcmd_line_parse and libenvparse</para>
<para><ulink url="https://github.com/randaleike/argparse">Homepage for this project</ulink><linebreak/>
 <ulink url="https://github.com/randaleike/argparse">Repository for this project</ulink><linebreak/>
 <ulink url="https://github.com/randaleike/argparse/doc">Documentation for this project</ulink><linebreak/>
 <ulink url="https://github.com/randaleike/argparse/issues">To report issues</ulink><linebreak/>
 <ulink url="https://github.com/randaleike/argparse/CHANGELOG.md">Changelog for this project</ulink><linebreak/>
 <ulink url="https://github.com/randaleike/argparse/CONTRIBUTING.md">Contribution guidelines for this project</ulink><linebreak/>
 </para>
</sect1>
    </detaileddescription>
    <location file="README.md"/>
  </compounddef>
</doxygen>
